{"ast":null,"code":"import { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USERS_FAILURE, LOAD_USERS_REQUEST, LOAD_USERS_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction loadUsersAPI() {\n  return axios.get('/user/all');\n}\n\nfunction ChangeNickNameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* loadUsers(action) {\n  try {\n    const result = yield call(loadUsersAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(SignUpAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* changeNickName(action) {\n  try {\n    const result = yield call(ChangeNickNameAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangenickName() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\n}\n\nfunction* watchLoadUserInfo() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchLoadUsersInfo() {\n  yield takeLatest(LOAD_USERS_REQUEST, loadUsers);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchLoadMyInfo), fork(watchLoadUserInfo), fork(watchLoadUsersInfo), fork(watchChangenickName)]);\n}","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/sagas/user.js"],"names":["all","call","fork","put","takeLatest","throttle","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USERS_FAILURE","LOAD_USERS_REQUEST","LOAD_USERS_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","loadMyInfoAPI","get","SignUpAPI","data","post","loadUserAPI","loadUsersAPI","ChangeNickNameAPI","patch","nickname","logInAPI","logOutAPI","loadMyInfo","action","result","type","err","error","response","loadUser","loadUsers","logIn","logOut","signUp","changeNickName","watchLogin","watchLogOut","watchSignUp","watchLoadMyInfo","watchChangenickName","watchLoadUserInfo","watchLoadUsersInfo","userSaga"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeLatest, throttle} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USERS_FAILURE,\r\n  LOAD_USERS_REQUEST,\r\n  LOAD_USERS_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n} from '../reducers/user';\r\n\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\nfunction SignUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`/user/${data}`);\r\n}\r\nfunction loadUsersAPI() {\r\n  return axios.get('/user/all');\r\n}\r\nfunction ChangeNickNameAPI(data) {\r\n  return axios.patch('/user/nickname', {nickname: data});\r\n}\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\nfunction logOutAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* loadUsers(action) {\r\n  try {\r\n    const result = yield call(loadUsersAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_USERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* logOut(action) {\r\n  try {\r\n    yield call(logOutAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(SignUpAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* changeNickName(action) {\r\n  try {\r\n    const result = yield call(ChangeNickNameAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\nfunction* watchChangenickName() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\r\n}\r\nfunction* watchLoadUserInfo() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\nfunction* watchLoadUsersInfo() {\r\n  yield takeLatest(LOAD_USERS_REQUEST, loadUsers);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLoadUserInfo),\r\n    fork(watchLoadUsersInfo),\r\n    fork(watchChangenickName),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}