{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\liked\\\\[tag].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { LOAD_LIKED_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\n\nfunction Hashtag() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\n\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    loadPostDone\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_LIKED_POSTS_REQUEST,\n      lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id\n    });\n  }, [loadPostDone]);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          dispatch({\n            type: LOAD_LIKED_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePost, tag, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_LIKED_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/liked/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","END","useRouter","axios","LOAD_LIKED_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","PostCard","wrapper","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePost","loadPostLoading","loadPostDone","state","post","userInfo","me","user","type","lastId","length","id","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_LIKED_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nfunction Hashtag() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\r\n  const { mainPosts, hasMorePost, loadPostLoading, loadPostDone } = useSelector((state) => state.post);\r\n  const { userInfo, me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_LIKED_POSTS_REQUEST,\r\n      lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n    });\r\n  }, [loadPostDone]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          dispatch({\r\n            type: LOAD_LIKED_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePost, tag, loadPostLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_LIKED_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}