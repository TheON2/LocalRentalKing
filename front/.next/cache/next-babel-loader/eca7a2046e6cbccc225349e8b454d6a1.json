{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\list.js\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport AppLayout from '../components/AppLayout';\n\nfunction List() {\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  const dispatch = useDispatch();\n  const {\n    me,\n    usersInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (!usersInfo) {\n      dispatch({\n        type: LOAD_MY_INFO_REQUEST\n      });\n      dispatch({\n        type: LOAD_USERS_REQUEST\n      });\n    }\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \" \", usersInfo.map(c => __jsx(Link, {\n    href: `/user/${c.id}`,\n    prefetch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }\n    }, c.nickname[0])),\n    title: c.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USERS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default List;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/list.js"],"names":["Card","Avatar","React","useEffect","Link","useDispatch","useSelector","axios","END","LOAD_MY_INFO_REQUEST","LOAD_USERS_REQUEST","wrapper","AppLayout","List","style","borderRadius","marginBottom","dispatch","me","usersInfo","state","user","type","map","c","id","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useEffect } from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nfunction List() {\r\n  const style = {\r\n    borderRadius: '2rem',\r\n    marginBottom: '20px',\r\n  };\r\n  const dispatch = useDispatch();\r\n  const {me, usersInfo} = useSelector((state) => state.user);\r\n  useEffect(() => {\r\n    if (!usersInfo) {\r\n      dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      dispatch({\r\n        type: LOAD_USERS_REQUEST,\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <AppLayout> {usersInfo.map((c) => (\r\n      <Link href={`/user/${c.id}`} prefetch={false}>\r\n        <Card style={style}>\r\n          <Card.Meta\r\n            avatar={(\r\n\r\n              <a><Avatar>{c.nickname[0]}</Avatar></a>\r\n\r\n            )}\r\n            title={c.nickname}\r\n          />\r\n          <br/>\r\n        </Card>\r\n      </Link>\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n\r\n}\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USERS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}