{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\list.js\";\nvar __jsx = React.createElement;\nimport { Button, Card } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React, { useCallback } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, logoutRequestAction } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport AppLayout from '../components/AppLayout';\n\nfunction List() {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logOutLoading\n  } = useSelector(state => state.user);\n  const onLogOut = useCallback(() => {\n    dispatch(logoutRequestAction());\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Link, {\n      href: `/user/${me.id}`,\n      prefetch: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    }, me.nickname[0]))),\n    title: me.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default List;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/list.js"],"names":["Button","Card","Avatar","React","useCallback","Link","useDispatch","useSelector","axios","END","LOAD_MY_INFO_REQUEST","logoutRequestAction","wrapper","LOAD_POST_REQUEST","AppLayout","List","dispatch","me","logOutLoading","state","user","onLogOut","id","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,QAA0D,kBAA1D;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAwBX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AACA,QAAMC,QAAQ,GAAGjB,WAAW,CAAC,MAAM;AACjCY,IAAAA,QAAQ,CAACL,mBAAmB,EAApB,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EACJ,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,SAAQM,EAAE,CAACK,EAAG,EAA3B;AAA8B,MAAA,QAAQ,EAAE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASL,EAAE,CAACM,QAAH,CAAY,CAAZ,CAAT,CAAH,CADF,CAFJ;AAME,IAAA,KAAK,EAAEN,EAAE,CAACM,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAcD;;AAED,OAAO,MAAMC,kBAAkB,GAAGZ,OAAO,CAACY,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAlB,EAAAA,KAAK,CAACqB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACAlB,EAAAA,KAAK,CAACqB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AAAE;AAC3BlB,IAAAA,KAAK,CAACqB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AAEDD,EAAAA,OAAO,CAACM,KAAR,CAAcf,QAAd,CAAuB;AACrBgB,IAAAA,IAAI,EAAEtB;AADe,GAAvB;AAGAe,EAAAA,OAAO,CAACM,KAAR,CAAcf,QAAd,CAAuB;AACrBgB,IAAAA,IAAI,EAAEnB;AADe,GAAvB;AAGAY,EAAAA,OAAO,CAACM,KAAR,CAAcf,QAAd,CAAuBP,GAAvB;AACA,QAAMgB,OAAO,CAACM,KAAR,CAAcE,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAhBiC,CAA3B;AAkBP,eAAenB,IAAf","sourcesContent":["import { Button, Card } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useCallback } from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { LOAD_MY_INFO_REQUEST, logoutRequestAction } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nfunction List() {\r\n  const dispatch = useDispatch();\r\n  const { me, logOutLoading } = useSelector((state) => state.user);\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n  }, []);\r\n  return (\r\n    <AppLayout>\r\n      <Card>\r\n        <Card.Meta\r\n          avatar={(\r\n            <Link href={`/user/${me.id}`} prefetch={false}>\r\n              <a><Avatar>{me.nickname[0]}</Avatar></a>\r\n            </Link>\r\n        )}\r\n          title={me.nickname}\r\n        />\r\n      </Card>\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}