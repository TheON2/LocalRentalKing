{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadMyInfo),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadUser),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadUsers),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(changeNickName),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyInfo),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchChangenickName),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUserInfo),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUsersInfo),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USERS_FAILURE, LOAD_USERS_REQUEST, LOAD_USERS_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\n\n_c = SignUpAPI;\n\nfunction loadUserAPI(data) {\n  return axios.get(\"/user/\".concat(data));\n}\n\nfunction loadUsersAPI() {\n  return axios.get('/user/all');\n}\n\nfunction ChangeNickNameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\n_c2 = ChangeNickNameAPI;\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction loadMyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadMyInfoAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction loadUsers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUsers$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadUsersAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_USERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOAD_USERS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction logIn(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(logInAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI, action.data);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 11;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(SignUpAPI, action.data);\n\n        case 3:\n          _context6.next = 5;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context6.next = 11;\n          break;\n\n        case 7:\n          _context6.prev = 7;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 7]]);\n}\n\nfunction changeNickName(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function changeNickName$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(ChangeNickNameAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLoadMyInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadMyInfo$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchChangenickName() {\n  return _regeneratorRuntime.wrap(function watchChangenickName$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchLoadUserInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadUserInfo$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLoadUsersInfo() {\n  return _regeneratorRuntime.wrap(function watchLoadUsersInfo$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_USERS_REQUEST, loadUsers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchLoadMyInfo), fork(watchLoadUserInfo), fork(watchLoadUsersInfo), fork(watchChangenickName)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignUpAPI\");\n$RefreshReg$(_c2, \"ChangeNickNameAPI\");","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/sagas/user.js"],"names":["loadMyInfo","loadUser","loadUsers","logIn","logOut","signUp","changeNickName","watchLogin","watchLogOut","watchSignUp","watchLoadMyInfo","watchChangenickName","watchLoadUserInfo","watchLoadUsersInfo","userSaga","all","call","fork","put","takeLatest","throttle","axios","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USERS_FAILURE","LOAD_USERS_REQUEST","LOAD_USERS_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","loadMyInfoAPI","get","SignUpAPI","data","post","loadUserAPI","loadUsersAPI","ChangeNickNameAPI","patch","nickname","logInAPI","logOutAPI","action","result","type","error","response"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeLatest, throttle} from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  CHANGE_NICKNAME_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_USER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USERS_FAILURE,\n  LOAD_USERS_REQUEST,\n  LOAD_USERS_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from '../reducers/user';\n\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\nfunction loadUsersAPI() {\n  return axios.get('/user/all');\n}\nfunction ChangeNickNameAPI(data) {\n  return axios.patch('/user/nickname', {nickname: data});\n}\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* loadUsers(action) {\n  try {\n    const result = yield call(loadUsersAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USERS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USERS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* signUp(action) {\n  try {\n    yield call(SignUpAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\nfunction* changeNickName(action) {\n  try {\n    const result = yield call(ChangeNickNameAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchChangenickName() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\n}\nfunction* watchLoadUserInfo() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\nfunction* watchLoadUsersInfo() {\n  yield takeLatest(LOAD_USERS_REQUEST, loadUsers);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogin),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchLoadMyInfo),\n    fork(watchLoadUserInfo),\n    fork(watchLoadUsersInfo),\n    fork(watchChangenickName),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}