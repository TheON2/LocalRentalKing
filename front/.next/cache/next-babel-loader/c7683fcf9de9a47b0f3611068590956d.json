{"ast":null,"code":"import axios from 'axios';\nimport { all, call, fork, put, takeLatest } from 'redux-saga/effects';\nimport { CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USERS_REQUEST, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserAPI(data) {\n  return axios.get(`/user/${data}`);\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUsersAPI() {\n  return axios.get('/user/all');\n}\n\nfunction* loadUsers(action) {\n  try {\n    const result = yield call(loadUsersAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI(data) {\n  return axios.post('/user/logout', data);\n}\n\nfunction* logOut(action) {\n  try {\n    yield call(logOutAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction SignUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(SignUpAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction FollowAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(FollowAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction UnFollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(UnFollowAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction ChangeNickNameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickName(action) {\n  try {\n    const result = yield call(ChangeNickNameAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowersAPI(data) {\n  return axios.get('/user/followers', data);\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeFollowersAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollowers(action) {\n  try {\n    const result = yield call(removeFollowersAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchChangenickName() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollowers);\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\nfunction* watchLoadUserInfo() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchLoadUsersInfo() {\n  yield takeLatest(LOAD_USERS_REQUEST, loadUsers);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow), fork(watchLoadMyInfo), fork(watchLoadUserInfo), fork(watchLoadUsersInfo), fork(watchChangenickName), fork(watchLoadFollowers), fork(watchRemoveFollower), fork(watchLoadFollowings)]);\n}","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/sagas/user.js"],"names":["axios","all","call","fork","put","takeLatest","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USERS_REQUEST","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loadMyInfoAPI","get","loadMyInfo","action","result","data","type","err","error","response","loadUserAPI","loadUser","loadUsersAPI","loadUsers","logInAPI","post","logIn","logOutAPI","logOut","SignUpAPI","signUp","FollowAPI","patch","follow","UnFollowAPI","delete","unfollow","ChangeNickNameAPI","nickname","changeNickName","loadFollowersAPI","loadFollowers","console","loadFollowingsAPI","loadFollowings","removeFollowersAPI","removeFollowers","watchLogin","watchLogOut","watchSignUp","watchFollow","watchUnFollow","watchLoadMyInfo","watchChangenickName","watchLoadFollowers","watchRemoveFollower","watchLoadFollowings","watchLoadUserInfo","watchLoadUsersInfo","userSaga"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  CHANGE_NICKNAME_FAILURE,\r\n  CHANGE_NICKNAME_REQUEST,\r\n  CHANGE_NICKNAME_SUCCESS,\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOAD_FOLLOWERS_FAILURE,\r\n  LOAD_FOLLOWERS_REQUEST,\r\n  LOAD_FOLLOWERS_SUCCESS,\r\n  LOAD_FOLLOWINGS_FAILURE,\r\n  LOAD_FOLLOWINGS_REQUEST,\r\n  LOAD_FOLLOWINGS_SUCCESS,\r\n  LOAD_MY_INFO_FAILURE,\r\n  LOAD_MY_INFO_REQUEST,\r\n  LOAD_MY_INFO_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USERS_REQUEST,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  REMOVE_FOLLOWER_FAILURE,\r\n  REMOVE_FOLLOWER_REQUEST,\r\n  REMOVE_FOLLOWER_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from '../reducers/user';\r\n\r\nfunction loadMyInfoAPI() {\r\n  return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n  try {\r\n    const result = yield call(loadMyInfoAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_MY_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_MY_INFO_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserAPI(data) {\r\n  return axios.get(`/user/${data}`);\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUsersAPI() {\r\n  return axios.get('/user/all');\r\n}\r\n\r\nfunction* loadUsers(action) {\r\n  try {\r\n    const result = yield call(loadUsersAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction logOutAPI(data) {\r\n  return axios.post('/user/logout', data);\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    yield call(logOutAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction SignUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(SignUpAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction FollowAPI(data) {\r\n  return axios.patch(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    const result = yield call(FollowAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: FOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction UnFollowAPI(data) {\r\n  return axios.delete(`/user/${data}/follow`);\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    const result = yield call(UnFollowAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction ChangeNickNameAPI(data) {\r\n  return axios.patch('/user/nickname', { nickname: data });\r\n}\r\n\r\nfunction* changeNickName(action) {\r\n  try {\r\n    const result = yield call(ChangeNickNameAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: CHANGE_NICKNAME_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: CHANGE_NICKNAME_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowersAPI(data) {\r\n  return axios.get('/user/followers', data);\r\n}\r\n\r\nfunction* loadFollowers(action) {\r\n  try {\r\n    const result = yield call(loadFollowersAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWERS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadFollowingsAPI(data) {\r\n  return axios.get('/user/followings', data);\r\n}\r\n\r\nfunction* loadFollowings(action) {\r\n  try {\r\n    const result = yield call(loadFollowingsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_FOLLOWINGS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removeFollowersAPI(data) {\r\n  return axios.delete(`/user/follower/${data}`);\r\n}\r\n\r\nfunction* removeFollowers(action) {\r\n  try {\r\n    const result = yield call(removeFollowersAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: REMOVE_FOLLOWER_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnFollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchChangenickName() {\r\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickName);\r\n}\r\n\r\nfunction* watchLoadFollowers() {\r\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n}\r\n\r\nfunction* watchRemoveFollower() {\r\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollowers);\r\n}\r\n\r\nfunction* watchLoadFollowings() {\r\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n}\r\n\r\nfunction* watchLoadUserInfo() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchLoadUsersInfo() {\r\n  yield takeLatest(LOAD_USERS_REQUEST, loadUsers);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnFollow),\r\n    fork(watchLoadMyInfo),\r\n    fork(watchLoadUserInfo),\r\n    fork(watchLoadUsersInfo),\r\n    fork(watchChangenickName),\r\n    fork(watchLoadFollowers),\r\n    fork(watchRemoveFollower),\r\n    fork(watchLoadFollowings),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}