{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\teamproject\\\\project\\\\LocalRentalKing\\\\front\\\\pages\\\\objectrecieve.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from \"react-intersection-observer\";\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_O_RECIEVE_POST_REQUEST, LOAD_POST_REQUEST } from '../reducers/post';\nimport { Button } from \"antd\";\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\n\nfunction ObjectRecieve() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      selectedTag = _useSelector2.selectedTag,\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      id = _useSelector2.id,\n      object_TagsData = _useSelector2.object_TagsData;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 1,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading, selectedTag]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"\\uBB3C\\uAC74\\uC744 \\uBE4C\\uB824\\uC918 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard1, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }\n    });\n  })));\n}\n\n_s(ObjectRecieve, \"QQ/Hw3m04xEolEctsqYRw7IWfHM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ObjectRecieve;\nexport var __N_SSP = true;\nexport default ObjectRecieve;\n\nvar _c;\n\n$RefreshReg$(_c, \"ObjectRecieve\");","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/pages/objectrecieve.js"],"names":["React","useCallback","useEffect","useState","Head","useDispatch","useSelector","useInView","AppLayout","LOAD_O_RECIEVE_POST_REQUEST","LOAD_POST_REQUEST","Button","Tags","PostCard1","Router","Layout","ObjectRecieve","dispatch","state","user","me","post","selectedTag","mainPosts","hasMorePost","loadPostLoading","id","object_TagsData","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","boardNum","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useInView } from \"react-intersection-observer\";\n\nimport AppLayout from '../components/AppLayout/AppLayout';\n\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport {LOAD_O_RECIEVE_POST_REQUEST, LOAD_POST_REQUEST, UPDATE_TAG} from '../reducers/post';\nimport {Button} from \"antd\";\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\n\n\nfunction ObjectRecieve() {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const { selectedTag,mainPosts, hasMorePost, loadPostLoading, id , object_TagsData } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data:selectedTag,\n            boardNum:1,\n            lastId:lastId,\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n      }\n    };\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [ hasMorePost, loadPostLoading , selectedTag]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return (\n    <>\n      <Head>\n        <title>물건을 빌려줘 | 우리동네 렌탈대장</title>\n      </Head>\n      <Layout>\n        <Tags tagsData={object_TagsData} boardNum={1}/>\n        {mainPosts.map((post) => <PostCard1 key={post.id} post={post} />)}\n      </Layout>\n    </>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: UPDATE_TAG,\n    data:\"전체\",\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data:\"전체\",\n    boardNum:1,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default ObjectRecieve;\n"]},"metadata":{},"sourceType":"module"}