{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\teamproject\\\\project\\\\LocalRentalKing\\\\front\\\\pages\\\\profile.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { Avatar, Card } from 'antd';\nimport Link from 'next/link';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_USERS_REQUEST } from '../reducers/user';\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction Profile() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      usersInfo = _useSelector.usersInfo;\n\n  var style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  useEffect(function () {\n    if (!(me && me.id)) {\n      alert('로그인 후 이용 가능 합니다.');\n      Router.replace('/loginpage'); // push와 다르게 replace는 이전 기록 자체를 지워버리기에 이자리에 더 적합하다.\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, me.nickname[0]),\n    title: me.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), __jsx(PostCard2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Profile, \"4VKsiXr5GRwCxChV54ZmR77VO9Q=\", false, function () {\n  return [useSelector];\n});\n\n_c = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/pages/profile.js"],"names":["React","useEffect","Head","useSelector","Router","Avatar","Card","Link","AppLayout","LOAD_USERS_REQUEST","Layout","PostCard2","Profile","state","user","me","usersInfo","style","borderRadius","marginBottom","id","alert","replace","nickname"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,MAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAA8BC,kBAA9B,QAAuD,kBAAvD;AAGA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,qBAA2BT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAtC;AAAA,MAAQC,EAAR,gBAAQA,EAAR;AAAA,MAAaC,SAAb,gBAAaA,SAAb;;AAEA,MAAMC,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE,MADF;AAEZC,IAAAA,YAAY,EAAE;AAFF,GAAd;AAKAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAAEc,EAAE,IAAIA,EAAE,CAACK,EAAX,CAAJ,EAAoB;AAClBC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACAjB,MAAAA,MAAM,CAACkB,OAAP,CAAe,YAAf,EAFkB,CAEY;AAC/B;AACF,GALQ,EAKN,CAACP,EAAE,IAAIA,EAAE,CAACK,EAAV,CALM,CAAT;;AAOA,MAAI,CAACL,EAAL,EAAS;AACP,WAAO,aAAP;AACD;;AAED,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFADF,CADF,EAIE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,EAAE,CAACQ,QAAH,CAAY,CAAZ,CAAT,CADV;AAEE,IAAA,KAAK,EAAER,EAAE,CAACQ,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAJF,CADF;AAiCD;;GApDQX,O;UACoBT,W;;;KADpBS,O;;AA0ET,eAAeA,OAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport Head from 'next/head';\nimport {useSelector} from 'react-redux';\nimport Router from 'next/router';\nimport {END} from 'redux-saga';\nimport {Avatar, Card} from 'antd';\nimport Link from 'next/link';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport {LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST} from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction Profile() {\n  const { me , usersInfo } = useSelector((state) => state.user);\n\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px',\n  };\n\n  useEffect(() => {\n    if (!(me && me.id)) {\n      alert('로그인 후 이용 가능 합니다.');\n      Router.replace('/loginpage'); // push와 다르게 replace는 이전 기록 자체를 지워버리기에 이자리에 더 적합하다.\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return (\n    <>\n      <Head>\n        <title>내 프로필 | 우리동네 렌탈대장</title>\n      </Head>\n      <Layout>\n\n        <Card>\n          <Card.Meta\n            avatar={<Avatar>{me.nickname[0]}</Avatar>}\n            title={me.nickname}\n          />\n        </Card>\n\n        <PostCard2/>\n\n        {/*{usersInfo.map((c) => (*/}\n        {/*  <Link href={`/user/${c.id}`} prefetch={false}>*/}\n        {/*    <Card style={style}>*/}\n        {/*      <Card.Meta*/}\n        {/*        avatar={(*/}\n        {/*          <a><Avatar>{c.nickname[0]}</Avatar></a>*/}\n        {/*        )}*/}\n        {/*        title={c.nickname}*/}\n        {/*      />*/}\n        {/*      <br />*/}\n        {/*    </Card>*/}\n        {/*  </Link>*/}\n        {/*))}*/}\n\n      </Layout>\n    </>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  // context.store.dispatch({\n  //   type: LOAD_USERS_REQUEST,\n  // });\n  // context.store.dispatch({\n  //   type: LOAD_POST_REQUEST,\n  // });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}