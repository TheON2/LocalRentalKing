{"ast":null,"code":"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_LIKED_POSTS_FAILURE, LOAD_LIKED_POSTS_REQUEST, LOAD_LIKED_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_RELATED_POST_FAILURE, LOAD_RELATED_POST_REQUEST, LOAD_RELATED_POST_SUCCESS, LOAD_RENTAL_POST_FAILURE, LOAD_RENTAL_POST_REQUEST, LOAD_RENTAL_POST_SUCCESS, LOAD_SEARCH_POSTS_FAILURE, LOAD_SEARCH_POSTS_REQUEST, LOAD_SEARCH_POSTS_SUCCESS, LOAD_SPOST_FAILURE, LOAD_SPOST_REQUEST, LOAD_SPOST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_WRITE_POST_FAILURE, LOAD_WRITE_POST_REQUEST, LOAD_WRITE_POST_SUCCESS, MODIFY_POST_FAILURE, MODIFY_POST_REQUEST, MODIFY_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, SEND_DUMMYPOST_FAILURE, SEND_DUMMYPOST_REQUEST, SEND_DUMMYPOST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data); // formdata 전송\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction sendDummyPostAPI(data) {\n  return axios.post('/post/write', data); // formdata 전송\n}\n\nfunction* sendDummyPost(action) {\n  try {\n    const result = yield call(sendDummyPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SEND_DUMMYPOST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SEND_DUMMYPOST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`); // delete는 데이터를 가져갈 수 없다 data는 postId\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data, lastId, boardNum) {\n  console.log(data);\n  return axios.get(`/posts/${encodeURIComponent(data)}/post?lastId=${lastId || 0}&boardNum=${boardNum || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data, action.lastId, action.boardNum);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadSearchPostAPI(data, lastId, local) {\n  console.log(data);\n  return axios.get(`/posts/${encodeURIComponent(data)}/post?lastId=${lastId || 0}&local=${local || \"선택안함\"}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadSearchPost(action) {\n  try {\n    const result = yield call(loadSearchPostAPI, action.data, action.lastId, action.local);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_SEARCH_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_SEARCH_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction rentalPostAPI(data, lastId) {\n  // 대상유저 id\n  console.log(data);\n  return axios.get(`/posts/${data}/post?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* rentalPost(action) {\n  try {\n    const result = yield call(rentalPostAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_RENTAL_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_RENTAL_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction writePostAPI(data, lastId) {\n  // 대상유저 id\n  console.log(data);\n  return axios.get(`/posts/${data}/post?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* writePost(action) {\n  try {\n    const result = yield call(writePostAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_WRITE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_WRITE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadSPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadSPost(action) {\n  try {\n    const result = yield call(loadSPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_SPOST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_SPOST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LIKE_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction RelatedPostAPI(lastId) {\n  return axios.get(`/posts/related?lastId=${lastId || 0}`);\n}\n\nfunction* RelatedPost(action) {\n  try {\n    const result = yield call(RelatedPostAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_RELATED_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_RELATED_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadLikedPostsAPI(data, lastId) {\n  return axios.get(`/liked?lastId=${lastId || 0}`);\n}\n\nfunction* loadLikedPosts(action) {\n  try {\n    const result = yield call(loadLikedPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_LIKED_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_LIKED_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction modifyPostAPI(data) {\n  return axios.patch(`/post/${data.PostId}`, data);\n}\n\nfunction* modifyPost(action) {\n  try {\n    const result = yield call(modifyPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: MODIFY_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: MODIFY_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadSPost() {\n  yield takeLatest(LOAD_SPOST_REQUEST, loadSPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchModifyPost() {\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\n}\n\nfunction* watchLoadRelatedPost() {\n  yield takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\n}\n\nfunction* watchLoadLikedtagPosts() {\n  yield takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\n}\n\nfunction* watchLoadRentalPost() {\n  yield takeLatest(LOAD_RENTAL_POST_REQUEST, rentalPost);\n}\n\nfunction* watchLoadWritePost() {\n  yield takeLatest(LOAD_WRITE_POST_REQUEST, writePost);\n}\n\nfunction* watchLoadSearchPost() {\n  yield takeLatest(LOAD_SEARCH_POSTS_REQUEST, loadSearchPost);\n}\n\nfunction* watchSendDummyPost() {\n  yield takeLatest(SEND_DUMMYPOST_REQUEST, sendDummyPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadSPost), fork(watchLoadPost), fork(watchLoadRelatedPost), fork(watchLoadHashtagPosts), fork(watchLoadLikedtagPosts), fork(watchLoadUserPosts), fork(watchLikePost), fork(watchUnLikePost), fork(watchRemovePost), fork(watchModifyPost), fork(watchAddComment), fork(watchUploadImages), fork(watchLoadRentalPost), fork(watchLoadWritePost), fork(watchLoadSearchPost), fork(watchSendDummyPost)]);\n}","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/sagas/post.js"],"names":["all","call","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_LIKED_POSTS_FAILURE","LOAD_LIKED_POSTS_REQUEST","LOAD_LIKED_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_RELATED_POST_FAILURE","LOAD_RELATED_POST_REQUEST","LOAD_RELATED_POST_SUCCESS","LOAD_RENTAL_POST_FAILURE","LOAD_RENTAL_POST_REQUEST","LOAD_RENTAL_POST_SUCCESS","LOAD_SEARCH_POSTS_FAILURE","LOAD_SEARCH_POSTS_REQUEST","LOAD_SEARCH_POSTS_SUCCESS","LOAD_SPOST_FAILURE","LOAD_SPOST_REQUEST","LOAD_SPOST_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_WRITE_POST_FAILURE","LOAD_WRITE_POST_REQUEST","LOAD_WRITE_POST_SUCCESS","MODIFY_POST_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","SEND_DUMMYPOST_FAILURE","SEND_DUMMYPOST_REQUEST","SEND_DUMMYPOST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","addPost","action","result","type","id","err","error","response","sendDummyPostAPI","sendDummyPost","removePostAPI","delete","removePost","loadPostAPI","lastId","boardNum","console","log","get","encodeURIComponent","loadPost","loadSearchPostAPI","local","loadSearchPost","rentalPostAPI","rentalPost","writePostAPI","writePost","loadSPostAPI","loadSPost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","addCommentAPI","postId","addComment","uploadImagesAPI","uploadImages","loadUserPostsAPI","loadUserPosts","RelatedPostAPI","RelatedPost","loadHashtagPostsAPI","loadHashtagPosts","loadLikedPostsAPI","loadLikedPosts","modifyPostAPI","PostId","modifyPost","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchUploadImages","watchLoadSPost","watchLoadUserPosts","watchLoadHashtagPosts","watchModifyPost","watchLoadRelatedPost","watchLoadLikedtagPosts","watchLoadRentalPost","watchLoadWritePost","watchLoadSearchPost","watchSendDummyPost","postSaga"],"mappings":"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","sourcesContent":["import {all, call, fork, put, takeLatest} from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_LIKED_POSTS_FAILURE,\n  LOAD_LIKED_POSTS_REQUEST,\n  LOAD_LIKED_POSTS_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_RELATED_POST_FAILURE,\n  LOAD_RELATED_POST_REQUEST,\n  LOAD_RELATED_POST_SUCCESS,\n  LOAD_RENTAL_POST_FAILURE,\n  LOAD_RENTAL_POST_REQUEST,\n  LOAD_RENTAL_POST_SUCCESS, LOAD_SEARCH_POSTS_FAILURE, LOAD_SEARCH_POSTS_REQUEST, LOAD_SEARCH_POSTS_SUCCESS,\n  LOAD_SPOST_FAILURE,\n  LOAD_SPOST_REQUEST,\n  LOAD_SPOST_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  LOAD_WRITE_POST_FAILURE,\n  LOAD_WRITE_POST_REQUEST,\n  LOAD_WRITE_POST_SUCCESS,\n  MODIFY_POST_FAILURE,\n  MODIFY_POST_REQUEST,\n  MODIFY_POST_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS, SEND_DUMMYPOST_FAILURE, SEND_DUMMYPOST_REQUEST, SEND_DUMMYPOST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from '../reducers/post';\nimport {ADD_POST_TO_ME, REMOVE_POST_OF_ME} from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data); // formdata 전송\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction sendDummyPostAPI(data) {\n  return axios.post('/post/write', data); // formdata 전송\n}\n\nfunction* sendDummyPost(action) {\n  try {\n    const result = yield call(sendDummyPostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: SEND_DUMMYPOST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: SEND_DUMMYPOST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`); // delete는 데이터를 가져갈 수 없다 data는 postId\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data, lastId , boardNum) {\n  console.log(data);\n  return axios.get(`/posts/${encodeURIComponent(data)}/post?lastId=${lastId || 0}&boardNum=${boardNum || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data, action.lastId , action.boardNum);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadSearchPostAPI(data, lastId , local) {\n  console.log(data);\n  return axios.get(`/posts/${encodeURIComponent(data)}/post?lastId=${lastId || 0}&local=${local || \"선택안함\"}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadSearchPost(action) {\n  try {\n    const result = yield call(loadSearchPostAPI, action.data, action.lastId , action.local);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_SEARCH_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_SEARCH_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction rentalPostAPI(data, lastId) { // 대상유저 id\n  console.log(data);\n  return axios.get(`/posts/${(data)}/post?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* rentalPost(action) {\n  try {\n    const result = yield call(rentalPostAPI, action.data, action.lastId );\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_RENTAL_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_RENTAL_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction writePostAPI(data, lastId) { // 대상유저 id\n  console.log(data);\n  return axios.get(`/posts/${(data)}/post?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* writePost(action) {\n  try {\n    const result = yield call(writePostAPI, action.data, action.lastId );\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_WRITE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_WRITE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadSPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadSPost(action) {\n  try {\n    const result = yield call(loadSPostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_SPOST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_SPOST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LIKE_POST_SUCCESS,\n      data: result.data, // PostId,UserId\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data, // PostId,UserId\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction RelatedPostAPI(lastId) {\n  return axios.get(`/posts/related?lastId=${lastId || 0}`);\n}\n\nfunction* RelatedPost(action) {\n  try {\n    const result = yield call(RelatedPostAPI, action.data, action.lastId);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_RELATED_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_RELATED_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadLikedPostsAPI(data, lastId) {\n  return axios.get(`/liked?lastId=${lastId || 0}`);\n}\n\nfunction* loadLikedPosts(action) {\n  try {\n    const result = yield call(loadLikedPostsAPI, action.data, action.lastId);\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_LIKED_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_LIKED_POSTS_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction modifyPostAPI(data) {\n  return axios.patch(`/post/${data.PostId}`, data);\n}\n\nfunction* modifyPost(action) {\n  try {\n    const result = yield call(modifyPostAPI, action.data);\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: MODIFY_POST_SUCCESS,\n      data: result.data, // PostId,UserId\n    });\n  } catch (err) {\n    yield put({\n      type: MODIFY_POST_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest( LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadSPost() {\n  yield takeLatest(LOAD_SPOST_REQUEST, loadSPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchModifyPost() {\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\n}\n\nfunction* watchLoadRelatedPost() {\n  yield takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\n}\n\nfunction* watchLoadLikedtagPosts() {\n  yield takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\n}\n\nfunction* watchLoadRentalPost() {\n  yield takeLatest(LOAD_RENTAL_POST_REQUEST, rentalPost);\n}\n\nfunction* watchLoadWritePost() {\n  yield takeLatest(LOAD_WRITE_POST_REQUEST, writePost);\n}\n\nfunction* watchLoadSearchPost() {\n  yield takeLatest(LOAD_SEARCH_POSTS_REQUEST, loadSearchPost);\n}\n\nfunction* watchSendDummyPost() {\n  yield takeLatest(SEND_DUMMYPOST_REQUEST, sendDummyPost);\n}\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost),\n    fork(watchLoadSPost),\n    fork(watchLoadPost),\n    fork(watchLoadRelatedPost),\n    fork(watchLoadHashtagPosts),\n    fork(watchLoadLikedtagPosts),\n    fork(watchLoadUserPosts),\n    fork(watchLikePost),\n    fork(watchUnLikePost),\n    fork(watchRemovePost),\n    fork(watchModifyPost),\n    fork(watchAddComment),\n    fork(watchUploadImages),\n    fork(watchLoadRentalPost),\n    fork(watchLoadWritePost),\n    fork(watchLoadSearchPost),\n    fork(watchSendDummyPost),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}