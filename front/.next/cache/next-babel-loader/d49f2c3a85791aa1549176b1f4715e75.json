{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\teamproject\\\\project\\\\LocalRentalKing\\\\front\\\\pages\\\\search.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport Head from 'next/head';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { SearchInput } from \"../components/AppLayout/styles\";\nimport Router from \"next/router\";\nimport useInput from \"../hooks/useInput\";\nimport Link from \"next/link\";\nimport { Avatar, Card } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST, LOAD_USERS_REQUEST } from \"../reducers/user\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport wrapper from \"../store/configureStore\";\n\nfunction Search() {\n  const [searchInput, onChangeSearchInput] = useInput('');\n  const {\n    me,\n    usersInfo,\n    userInfo\n  } = useSelector(state => state.user);\n  const {\n    0: findId,\n    1: setFindId\n  } = useState(false);\n  const dispatch = useDispatch();\n  const onSearch = useCallback(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: searchInput // 검색할 유저 아이디\n\n    });\n    setFindId(true);\n    searchInput(\"\");\n  }, [searchInput]);\n  const onClickProfile = useCallback(() => {\n    Router.push(`/profile/${searchInput}`);\n  }, [searchInput]);\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  return __jsx(React.Fragment, null, __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"\\uB3D9\\uB124\\uCE5C\\uAD6C \\uCC3E\\uAE30 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"\\uCE5C\\uAD6C\\uC758 \\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"), __jsx(SearchInput, {\n    enterButton: true,\n    value: searchInput,\n    onChange: onChangeSearchInput,\n    onSearch: onSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, usersInfo.map(c => __jsx(Link, {\n    href: `/user/${c.id}`,\n    prefetch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }\n    }, c.nickname[0])),\n    title: c.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USERS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Search;","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/pages/search.js"],"names":["React","useCallback","useState","Head","AppLayout","SearchInput","Router","useInput","Link","Avatar","Card","useDispatch","useSelector","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","LOAD_USERS_REQUEST","axios","END","wrapper","Search","searchInput","onChangeSearchInput","me","usersInfo","userInfo","state","user","findId","setFindId","dispatch","onSearch","type","data","onClickProfile","push","style","borderRadius","marginBottom","map","c","id","nickname","getServerSideProps","context","store","sagaTask","toPromise"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,MAA3B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,oBAAR,EAA8BC,iBAA9B,EAAiDC,kBAAjD,QAA0E,kBAA1E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,MAAT,GAAkB;AAEhB,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCd,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAM;AAACe,IAAAA,EAAD;AAAKC,IAAAA,SAAL;AAAgBC,IAAAA;AAAhB,MAA4BZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7C;AAEA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsB1B,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAM2B,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,QAAMmB,QAAQ,GAAG7B,WAAW,CAAC,MAAM;AACjC4B,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEjB,iBADC;AAEPkB,MAAAA,IAAI,EAAEZ,WAFC,CAEY;;AAFZ,KAAD,CAAR;AAIAQ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAR,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAP2B,EAOzB,CAACA,WAAD,CAPyB,CAA5B;AASA,QAAMa,cAAc,GAAGhC,WAAW,CAAC,MAAM;AACvCK,IAAAA,MAAM,CAAC4B,IAAP,CAAa,YAAWd,WAAY,EAApC;AACD,GAFiC,EAE/B,CAACA,WAAD,CAF+B,CAAlC;AAIA,QAAMe,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE,MADF;AAEZC,IAAAA,YAAY,EAAE;AAFF,GAAd;AAKA,SACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGADF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADF,EAEE,MAAC,WAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,KAAK,EAAEjB,WAFT;AAGE,IAAA,QAAQ,EAAEC,mBAHZ;AAIE,IAAA,QAAQ,EAAES,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,CAACe,GAAV,CAAeC,CAAD,IACb,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,SAAQA,CAAC,CAACC,EAAG,EAA1B;AAA6B,IAAA,QAAQ,EAAE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASI,CAAC,CAACE,QAAF,CAAW,CAAX,CAAT,CAAH,CAFJ;AAIE,IAAA,KAAK,EAAEF,CAAC,CAACE,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADD,CADH,CAjBF,CADF,CADF;AA6CD;;AAGD,OAAO,MAAMC,kBAAkB,GAAGxB,OAAO,CAACwB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC5EA,EAAAA,OAAO,CAACC,KAAR,CAAcf,QAAd,CAAuB;AACrBE,IAAAA,IAAI,EAAElB;AADe,GAAvB;AAGA8B,EAAAA,OAAO,CAACC,KAAR,CAAcf,QAAd,CAAuB;AACrBE,IAAAA,IAAI,EAAEhB;AADe,GAAvB;AAGA4B,EAAAA,OAAO,CAACC,KAAR,CAAcf,QAAd,CAAuBZ,GAAvB;AACA,QAAM0B,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAT+B,CAA3B;AAYP,eAAe3B,MAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport Head from 'next/head';\n\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport {SearchInput} from \"../components/AppLayout/styles\";\nimport Router from \"next/router\";\nimport useInput from \"../hooks/useInput\";\nimport Link from \"next/link\";\nimport {Avatar, Card} from \"antd\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST, LOAD_USERS_REQUEST} from \"../reducers/user\";\nimport axios from \"axios\";\nimport {END} from \"redux-saga\";\nimport wrapper from \"../store/configureStore\";\n\nfunction Search() {\n\n  const [searchInput, onChangeSearchInput] = useInput('');\n\n  const {me, usersInfo, userInfo} = useSelector((state) => state.user);\n\n  const [findId, setFindId] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onSearch = useCallback(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: searchInput, // 검색할 유저 아이디\n    });\n    setFindId(true);\n    searchInput(\"\");\n  }, [searchInput]);\n\n  const onClickProfile = useCallback(() => {\n    Router.push(`/profile/${searchInput}`);\n  }, [searchInput]);\n\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px',\n  };\n\n  return (\n    <>\n      <AppLayout>\n\n        <Head>\n          <title>동네친구 찾기 | 우리동네 렌탈대장</title>\n        </Head>\n\n        <div>\n          <h1>친구의 아이디를 입력하세요</h1>\n          <SearchInput\n            enterButton\n            value={searchInput}\n            onChange={onChangeSearchInput}\n            onSearch={onSearch}\n          />\n          {/*  아이디/별명 선택박스 */}\n        </div>\n\n        <div>\n          {usersInfo.map((c) => (\n            <Link href={`/user/${c.id}`} prefetch={false}>\n              <Card style={style}>\n                <Card.Meta\n                  avatar={(\n                    <a><Avatar>{c.nickname[0]}</Avatar></a>\n                  )}\n                  title={c.nickname}\n                />\n                <br/>\n              </Card>\n            </Link>\n          ))}\n        </div>\n\n        {/*<div>*/}\n        {/*<Link href={`/user/${userInfo.id}`} prefetch={false}>*/}\n        {/*  {findId && <ProfileCard user={userInfo} />}*/}\n        {/*</Link>*/}\n        {/*</div>*/}\n        {/* profilecard를 완성하고 찾아낸 id를 입력하여 렌더링한다. */}\n\n      </AppLayout>\n    </>\n  );\n}\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_USERS_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}