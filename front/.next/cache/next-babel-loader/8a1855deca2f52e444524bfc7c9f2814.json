{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\list.js\";\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport useSWR from 'swr';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport AppLayout from '../components/AppLayout';\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nfunction List() {\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  const dispatch = useDispatch();\n  const {\n    me,\n    usersInfo\n  } = useSelector(state => state.user);\n  const {\n    data: users,\n    error: followerError\n  } = useSWR('http://localhost:3065/user/all', fetcher); // useEffect(() => {\n  //   if (!usersInfo) {\n  //     dispatch({\n  //       type: LOAD_MY_INFO_REQUEST,\n  //     });\n  //     dispatch({\n  //       type: LOAD_USERS_REQUEST,\n  //     });\n  //   }\n  // }, []);\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \" \", users.map(c => __jsx(Link, {\n    href: `/user/${c.id}`,\n    prefetch: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    }, c.nickname[0])),\n    title: c.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  }); // context.store.dispatch({\n  //   type: LOAD_USERS_REQUEST,\n  // });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default List;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/list.js"],"names":["Card","Avatar","React","useEffect","Link","useDispatch","useSelector","axios","END","useSWR","LOAD_MY_INFO_REQUEST","LOAD_USERS_REQUEST","wrapper","AppLayout","fetcher","url","get","withCredentials","then","result","data","List","style","borderRadius","marginBottom","dispatch","me","usersInfo","state","user","users","error","followerError","map","c","id","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import { Card } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useEffect } from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport useSWR from 'swr';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nconst fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\r\n\r\nfunction List() {\r\n  const style = {\r\n    borderRadius: '2rem',\r\n    marginBottom: '20px',\r\n  };\r\n  const dispatch = useDispatch();\r\n  const { me, usersInfo } = useSelector((state) => state.user);\r\n  const { data: users, error: followerError } = useSWR('http://localhost:3065/user/all', fetcher);\r\n\r\n  // useEffect(() => {\r\n  //   if (!usersInfo) {\r\n  //     dispatch({\r\n  //       type: LOAD_MY_INFO_REQUEST,\r\n  //     });\r\n  //     dispatch({\r\n  //       type: LOAD_USERS_REQUEST,\r\n  //     });\r\n  //   }\r\n  // }, []);\r\n  return (\r\n    <AppLayout> {users.map((c) => (\r\n      <Link href={`/user/${c.id}`} prefetch={false}>\r\n        <Card style={style}>\r\n          <Card.Meta\r\n            avatar={(\r\n\r\n              <a><Avatar>{c.nickname[0]}</Avatar></a>\r\n\r\n            )}\r\n            title={c.nickname}\r\n          />\r\n          <br />\r\n        </Card>\r\n      </Link>\r\n    ))}\r\n    </AppLayout>\r\n  );\r\n}\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  // context.store.dispatch({\r\n  //   type: LOAD_USERS_REQUEST,\r\n  // });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}