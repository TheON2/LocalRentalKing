{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\list.js\";\nvar __jsx = React.createElement;\nimport { Button, Card } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React, { useCallback } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST, logoutRequestAction } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport AppLayout from '../components/AppLayout';\nimport PostCard from \"../components/PostCard\";\n\nfunction List() {\n  const dispatch = useDispatch();\n  const {\n    me,\n    usersInfo\n  } = useSelector(state => state.user);\n  const onLogOut = useCallback(() => {\n    dispatch(logoutRequestAction());\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, usersInfo.map(c => __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Link, {\n      href: `/user/${c.id}`,\n      prefetch: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }\n    }, c.nickname[0]))),\n    title: c.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USERS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default List;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/list.js"],"names":["Button","Card","Avatar","React","useCallback","Link","useDispatch","useSelector","axios","END","LOAD_MY_INFO_REQUEST","LOAD_USERS_REQUEST","logoutRequestAction","wrapper","LOAD_POST_REQUEST","AppLayout","PostCard","List","dispatch","me","usersInfo","state","user","onLogOut","map","c","id","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import { Button, Card } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useCallback } from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport {LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST, logoutRequestAction} from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nfunction List() {\r\n  const dispatch = useDispatch();\r\n  const { me, usersInfo } = useSelector((state) => state.user);\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n  }, []);\r\n  return (\r\n    <AppLayout>\r\n      {usersInfo.map((c) => (\r\n      <Card>\r\n        <Card.Meta\r\n          avatar={(\r\n            <Link href={`/user/${c.id}`} prefetch={false}>\r\n              <a><Avatar>{c.nickname[0]}</Avatar></a>\r\n            </Link>\r\n        )}\r\n          title={c.nickname}\r\n        />\r\n        <br/>\r\n      </Card>\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USERS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}