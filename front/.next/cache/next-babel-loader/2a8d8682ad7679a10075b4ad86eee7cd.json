{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Bootcamp\\\\teamproject\\\\project\\\\LocalRentalKing\\\\front\\\\components\\\\Tags.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Tag, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_CHANGE_TAG_REQUEST, LOAD_POST_REQUEST, UPDATE_TAG } from \"../reducers/post\";\n\nfunction Tags(_ref) {\n  _s();\n\n  var _this = this;\n\n  var tagsData = _ref.tagsData,\n      boardNum = _ref.boardNum;\n  var CheckableTag = Tag.CheckableTag;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      selectedTags = _useState[0],\n      setSelectedTags = _useState[1];\n\n  var handleChange = useCallback(function (tag, checked) {\n    var nextSelectedTags = checked ? [tag].concat(_toConsumableArray(selectedTags)) : selectedTags.filter(function (t) {\n      return t !== tag;\n    });\n    setSelectedTags(_toConsumableArray(nextSelectedTags));\n    dispatch({\n      type: LOAD_CHANGE_TAG_REQUEST,\n      data: nextSelectedTags[0],\n      // 현재 선택한 태그명\n      boardNum: boardNum // 현재 렌더링중인 게시판 고유번호\n\n    });\n    dispatch({\n      type: UPDATE_TAG,\n      data: nextSelectedTags[0] // 전역적으로 현재 선택한 태그를 공유한다.\n\n    });\n    console.log('You are interested in: ', nextSelectedTags);\n    console.log('You are interested in: ', nextSelectedTags[0]);\n  }, []);\n  useEffect(function () {\n    setSelectedTags(['전체']);\n  }, []);\n  return __jsx(React.Fragment, null, tagsData.map(function (tag) {\n    return __jsx(CheckableTag, {\n      key: tag,\n      checked: selectedTags.indexOf(tag) > -1,\n      onChange: function onChange(checked) {\n        return handleChange(tag, checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, tag);\n  }));\n}\n\n_s(Tags, \"uCJlvmODkV4Jau8+sAQXR0gn1us=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/components/Tags.js"],"names":["React","useCallback","useEffect","useState","Tag","Button","useDispatch","useSelector","LOAD_CHANGE_TAG_REQUEST","LOAD_POST_REQUEST","UPDATE_TAG","Tags","tagsData","boardNum","CheckableTag","dispatch","selectedTags","setSelectedTags","handleChange","tag","checked","nextSelectedTags","filter","t","type","data","console","log","map","indexOf"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,SAASC,GAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,uBAAR,EAAiCC,iBAAjC,EAAoDC,UAApD,QAAqE,kBAArE;;AAEA,SAASC,IAAT,OAAqC;AAAA;;AAAA;;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAEnC,MAAQC,YAAR,GAAyBV,GAAzB,CAAQU,YAAR;AAEA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,kBAAsCH,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOa,YAAP;AAAA,MAAoBC,eAApB;;AAEA,MAAMC,YAAY,GAAGjB,WAAW,CAAC,UAACkB,GAAD,EAAMC,OAAN,EAAkB;AACjD,QAAMC,gBAAgB,GAAGD,OAAO,IAAKD,GAAL,4BAAYH,YAAZ,KAA6BA,YAAY,CAACM,MAAb,CAAoB,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,GAAV;AAAA,KAArB,CAA7D;AACAF,IAAAA,eAAe,oBAAKI,gBAAL,EAAf;AAEAN,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAChB,uBADE;AAEPiB,MAAAA,IAAI,EAACJ,gBAAgB,CAAC,CAAD,CAFd;AAEmB;AAC1BR,MAAAA,QAAQ,EAACA,QAHF,CAGY;;AAHZ,KAAD,CAAR;AAKAE,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEd,UADC;AAEPe,MAAAA,IAAI,EAACJ,gBAAgB,CAAC,CAAD,CAFd,CAEmB;;AAFnB,KAAD,CAAR;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,gBAAvC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,gBAAgB,CAAC,CAAD,CAAvD;AACC,GAhB6B,EAgB5B,EAhB4B,CAAhC;AAkBAnB,EAAAA,SAAS,CAAC,YAAI;AACZe,IAAAA,eAAe,CAAC,CAAC,IAAD,CAAD,CAAf;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,SACE,4BACGL,QAAQ,CAACgB,GAAT,CAAa,UAAAT,GAAG;AAAA,WACf,MAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,OAAO,EAAEH,YAAY,CAACa,OAAb,CAAqBV,GAArB,IAA4B,CAAC,CAFxC;AAGE,MAAA,QAAQ,EAAE,kBAAAC,OAAO;AAAA,eAAIF,YAAY,CAACC,GAAD,EAAMC,OAAN,CAAhB;AAAA,OAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,GALH,CADe;AAAA,GAAhB,CADH,CADF;AAaD;;GA3CQR,I;UAIUL,W;;;KAJVK,I;AA6CT,eAAeA,IAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { Tag , Button } from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOAD_CHANGE_TAG_REQUEST, LOAD_POST_REQUEST, UPDATE_TAG} from \"../reducers/post\";\r\n\r\nfunction Tags({tagsData , boardNum}) {\r\n\r\n  const { CheckableTag } = Tag;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedTags,setSelectedTags] =useState([]);\r\n\r\n  const handleChange = useCallback((tag, checked) => {\r\n    const nextSelectedTags = checked ? [ tag,...selectedTags,] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags([...nextSelectedTags]);\r\n\r\n    dispatch({\r\n      type:LOAD_CHANGE_TAG_REQUEST,\r\n      data:nextSelectedTags[0], // 현재 선택한 태그명\r\n      boardNum:boardNum, // 현재 렌더링중인 게시판 고유번호\r\n    })\r\n    dispatch({\r\n      type: UPDATE_TAG,\r\n      data:nextSelectedTags[0], // 전역적으로 현재 선택한 태그를 공유한다.\r\n    });\r\n\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    console.log('You are interested in: ', nextSelectedTags[0]);\r\n    },[]);\r\n\r\n  useEffect(()=>{\r\n    setSelectedTags(['전체']);\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      {tagsData.map(tag => (\r\n        <CheckableTag\r\n          key={tag}\r\n          checked={selectedTags.indexOf(tag) > -1}\r\n          onChange={checked => handleChange(tag, checked)}\r\n        >\r\n          {tag}\r\n        </CheckableTag>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n"]},"metadata":{},"sourceType":"module"}