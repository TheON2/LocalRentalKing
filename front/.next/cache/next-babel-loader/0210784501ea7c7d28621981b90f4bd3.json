{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\list.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Card } from 'antd';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport React, { useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_USERS_REQUEST, logoutRequestAction } from '../reducers/user';\nimport AppLayout from '../components/AppLayout';\n\nfunction List() {\n  _s();\n\n  var _this = this;\n\n  var style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USERS_REQUEST\n    });\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      usersInfo = _useSelector.usersInfo;\n\n  var onLogOut = useCallback(function () {\n    dispatch(logoutRequestAction());\n  }, []);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, usersInfo.map(function (c) {\n    return __jsx(Card, {\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, __jsx(Card.Meta, {\n      avatar: __jsx(Link, {\n        href: \"/user/\".concat(c.id),\n        prefetch: false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, __jsx(Avatar, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      }, c.nickname[0]))),\n      title: c.nickname,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }));\n  }));\n}\n\n_s(List, \"Bx4b/lxd2P3adsOWDd1uK8gIg1U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = List;\nexport var __N_SSP = true;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/list.js"],"names":["Card","Avatar","React","useCallback","useEffect","Link","useDispatch","useSelector","LOAD_USERS_REQUEST","logoutRequestAction","AppLayout","List","style","borderRadius","marginBottom","dispatch","type","state","user","me","usersInfo","onLogOut","map","c","id","nickname"],"mappings":";;;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAA+BC,kBAA/B,EAAmDC,mBAAnD,QAA8E,kBAA9E;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAEd,MAAMC,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE,MADF;AAEZC,IAAAA,YAAY,EAAE;AAFF,GAAd;AAIA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAKA,qBAA0BD,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAArC;AAAA,MAAQC,EAAR,gBAAQA,EAAR;AAAA,MAAYC,SAAZ,gBAAYA,SAAZ;;AACA,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,YAAM;AACjCY,IAAAA,QAAQ,CAACN,mBAAmB,EAApB,CAAR;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAGA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,SAAS,CAACE,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,IAAN;AACE,MAAA,MAAM,EACJ,MAAC,IAAD;AAAM,QAAA,IAAI,kBAAWW,CAAC,CAACC,EAAb,CAAV;AAA6B,QAAA,QAAQ,EAAE,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASD,CAAC,CAACE,QAAF,CAAW,CAAX,CAAT,CAAH,CADF,CAFJ;AAME,MAAA,KAAK,EAAEF,CAAC,CAACE,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADa;AAAA,GAAd,CADH,CADF;AAiBD;;GAjCQd,I;UAMUL,W,EAMSC,W;;;KAZnBI,I;;AAqDT,eAAeA,IAAf","sourcesContent":["import { Card } from 'antd';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST, logoutRequestAction } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nfunction List() {\r\n\r\n  const style = {\r\n    borderRadius: '2rem',\r\n    marginBottom: '20px',\r\n  };\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_USERS_REQUEST,\r\n    });\r\n  }, []);\r\n  const { me, usersInfo } = useSelector((state) => state.user);\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(logoutRequestAction());\r\n  }, []);\r\n  return (\r\n    <AppLayout>\r\n      {usersInfo.map((c) => (\r\n        <Card style={style}>\r\n          <Card.Meta\r\n            avatar={(\r\n              <Link href={`/user/${c.id}`} prefetch={false}>\r\n                <a><Avatar>{c.nickname[0]}</Avatar></a>\r\n              </Link>\r\n        )}\r\n            title={c.nickname}\r\n          />\r\n          <br />\r\n        </Card>\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USERS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}