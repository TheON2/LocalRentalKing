{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadSPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadUserPosts),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(RelatedPost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(loadHashtagPosts),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(loadLikedPosts),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(modifyPost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(loadCoopPosts),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(loadPlayPosts),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(loadoSendPosts),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(loadoRecievePosts),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(loadtSendPosts),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(loadtRecievePosts),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked24 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked25 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikePost),\n    _marked26 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked27 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadSPost),\n    _marked28 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUserPosts),\n    _marked29 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadHashtagPosts),\n    _marked30 = /*#__PURE__*/_regeneratorRuntime.mark(watchModifyPost),\n    _marked31 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadRelatedPost),\n    _marked32 = /*#__PURE__*/_regeneratorRuntime.mark(watchCoopLoadPost),\n    _marked33 = /*#__PURE__*/_regeneratorRuntime.mark(watchPlayLoadPost),\n    _marked34 = /*#__PURE__*/_regeneratorRuntime.mark(watchoSendLoadPost),\n    _marked35 = /*#__PURE__*/_regeneratorRuntime.mark(watchoRecieveLoadPost),\n    _marked36 = /*#__PURE__*/_regeneratorRuntime.mark(watchtSendLoadPost),\n    _marked37 = /*#__PURE__*/_regeneratorRuntime.mark(watchtRecieveLoadPost),\n    _marked38 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadLikedtagPosts),\n    _marked39 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_LIKED_POSTS_FAILURE, LOAD_LIKED_POSTS_REQUEST, LOAD_LIKED_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_RELATED_POST_FAILURE, LOAD_RELATED_POST_REQUEST, LOAD_RELATED_POST_SUCCESS, LOAD_COOP_POST_REQUEST, LOAD_COOP_POST_SUCCESS, LOAD_COOP_POST_FAILURE, LOAD_PLAY_POST_REQUEST, LOAD_PLAY_POST_SUCCESS, LOAD_PLAY_POST_FAILURE, LOAD_O_SEND_POST_REQUEST, LOAD_O_SEND_POST_SUCCESS, LOAD_O_SEND_POST_FAILURE, LOAD_O_RECIEVE_POST_REQUEST, LOAD_O_RECIEVE_POST_SUCCESS, LOAD_O_RECIEVE_POST_FAILURE, LOAD_T_SEND_POST_REQUEST, LOAD_T_SEND_POST_SUCCESS, LOAD_T_SEND_POST_FAILURE, LOAD_T_RECIEVE_POST_REQUEST, LOAD_T_RECIEVE_POST_SUCCESS, LOAD_T_RECIEVE_POST_FAILURE, LOAD_SPOST_FAILURE, LOAD_SPOST_REQUEST, LOAD_SPOST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, MODIFY_POST_FAILURE, MODIFY_POST_REQUEST, MODIFY_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data); // formdata 전송\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data)); // delete는 데이터를 가져갈 수 없다 data는 postId\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: result.data\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction loadPostAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostAPI, action.lastId);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadSPostAPI(data) {\n  return axios.get(\"/post/\".concat(data));\n}\n\nfunction loadSPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadSPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadSPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_SPOST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LOAD_SPOST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LIKE_POST_SUCCESS,\n            data: result.data // PostId,UserId\n\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data // PostId,UserId\n\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(\"/user/\".concat(data, \"/posts?lastId=\").concat(lastId || 0)); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction loadUserPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUserPosts$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(loadUserPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: LOAD_USER_POSTS_FAILURE,\n            error: _context9.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction RelatedPostAPI(lastId) {\n  return axios.get(\"/posts/related?lastId=\".concat(lastId || 0));\n}\n\n_c = RelatedPostAPI;\n\nfunction RelatedPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function RelatedPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(RelatedPostAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: LOAD_RELATED_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            type: LOAD_RELATED_POST_FAILURE,\n            error: _context10.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\n_c2 = RelatedPost;\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\"/hashtag/\".concat(encodeURIComponent(data), \"?lastId=\").concat(lastId || 0));\n}\n\nfunction loadHashtagPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadHashtagPosts$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(loadHashtagPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction loadLikedPostsAPI(data, lastId) {\n  return axios.get(\"/liked?lastId=\".concat(lastId || 0));\n}\n\nfunction loadLikedPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadLikedPosts$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.prev = 0;\n          _context12.next = 3;\n          return call(loadLikedPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context12.sent;\n          _context12.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 비슷하게 본다\n            type: LOAD_LIKED_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context12.next = 13;\n          break;\n\n        case 8:\n          _context12.prev = 8;\n          _context12.t0 = _context12[\"catch\"](0);\n          console.error(_context12.t0);\n          _context12.next = 13;\n          return put({\n            type: LOAD_LIKED_POSTS_FAILURE,\n            error: _context12.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[0, 8]]);\n}\n\nfunction modifyPostAPI(data) {\n  return axios.patch(\"/post/\".concat(data.PostId), data);\n}\n\nfunction modifyPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function modifyPost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(modifyPostAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: MODIFY_POST_SUCCESS,\n            data: result.data // PostId,UserId\n\n          });\n\n        case 6:\n          _context13.next = 12;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 12;\n          return put({\n            type: MODIFY_POST_FAILURE,\n            error: _context13.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction loadCoopPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadCoopPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadCoopPosts$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.prev = 0;\n          _context14.next = 3;\n          return call(loadCoopPostsAPI, action.lastId);\n\n        case 3:\n          result = _context14.sent;\n          _context14.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context14.next = 12;\n          break;\n\n        case 8:\n          _context14.prev = 8;\n          _context14.t0 = _context14[\"catch\"](0);\n          _context14.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context14.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[0, 8]]);\n}\n\nfunction loadPlayPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPlayPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPlayPosts$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadPlayPostsAPI, action.lastId);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 12;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          _context15.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context15.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction loadoSendPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadoSendPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadoSendPosts$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.prev = 0;\n          _context16.next = 3;\n          return call(loadoSendPostsAPI, action.lastId);\n\n        case 3:\n          result = _context16.sent;\n          _context16.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context16.next = 12;\n          break;\n\n        case 8:\n          _context16.prev = 8;\n          _context16.t0 = _context16[\"catch\"](0);\n          _context16.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context16.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16, null, [[0, 8]]);\n}\n\nfunction loadoRecievePostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadoRecievePosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadoRecievePosts$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(loadoRecievePostsAPI, action.lastId);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 12;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          _context17.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context17.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction loadtSendPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadtSendPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadtSendPosts$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.prev = 0;\n          _context18.next = 3;\n          return call(loadtSendPostsAPI, action.lastId);\n\n        case 3:\n          result = _context18.sent;\n          _context18.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context18.next = 12;\n          break;\n\n        case 8:\n          _context18.prev = 8;\n          _context18.t0 = _context18[\"catch\"](0);\n          _context18.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context18.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18, null, [[0, 8]]);\n}\n\nfunction loadtRecievePostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadtRecievePosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadtRecievePosts$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return call(loadtRecievePostsAPI, action.lastId);\n\n        case 3:\n          result = _context19.sent;\n          _context19.next = 6;\n          return put({\n            // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context19.next = 12;\n          break;\n\n        case 8:\n          _context19.prev = 8;\n          _context19.t0 = _context19[\"catch\"](0);\n          _context19.next = 12;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context19.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return throttle(2000, LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked24);\n}\n\nfunction watchUnLikePost() {\n  return _regeneratorRuntime.wrap(function watchUnLikePost$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _marked25);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context26) {\n    while (1) {\n      switch (_context26.prev = _context26.next) {\n        case 0:\n          _context26.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context26.stop();\n      }\n    }\n  }, _marked26);\n}\n\nfunction watchLoadSPost() {\n  return _regeneratorRuntime.wrap(function watchLoadSPost$(_context27) {\n    while (1) {\n      switch (_context27.prev = _context27.next) {\n        case 0:\n          _context27.next = 2;\n          return takeLatest(LOAD_SPOST_REQUEST, loadSPost);\n\n        case 2:\n        case \"end\":\n          return _context27.stop();\n      }\n    }\n  }, _marked27);\n}\n\nfunction watchLoadUserPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadUserPosts$(_context28) {\n    while (1) {\n      switch (_context28.prev = _context28.next) {\n        case 0:\n          _context28.next = 2;\n          return takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n\n        case 2:\n        case \"end\":\n          return _context28.stop();\n      }\n    }\n  }, _marked28);\n}\n\nfunction watchLoadHashtagPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadHashtagPosts$(_context29) {\n    while (1) {\n      switch (_context29.prev = _context29.next) {\n        case 0:\n          _context29.next = 2;\n          return takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n\n        case 2:\n        case \"end\":\n          return _context29.stop();\n      }\n    }\n  }, _marked29);\n}\n\nfunction watchModifyPost() {\n  return _regeneratorRuntime.wrap(function watchModifyPost$(_context30) {\n    while (1) {\n      switch (_context30.prev = _context30.next) {\n        case 0:\n          _context30.next = 2;\n          return takeLatest(MODIFY_POST_REQUEST, modifyPost);\n\n        case 2:\n        case \"end\":\n          return _context30.stop();\n      }\n    }\n  }, _marked30);\n}\n\nfunction watchLoadRelatedPost() {\n  return _regeneratorRuntime.wrap(function watchLoadRelatedPost$(_context31) {\n    while (1) {\n      switch (_context31.prev = _context31.next) {\n        case 0:\n          _context31.next = 2;\n          return takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\n\n        case 2:\n        case \"end\":\n          return _context31.stop();\n      }\n    }\n  }, _marked31);\n}\n\nfunction watchCoopLoadPost() {\n  return _regeneratorRuntime.wrap(function watchCoopLoadPost$(_context32) {\n    while (1) {\n      switch (_context32.prev = _context32.next) {\n        case 0:\n          _context32.next = 2;\n          return takeLatest(LOAD_COOP_POST_REQUEST, loadCoopPosts);\n\n        case 2:\n        case \"end\":\n          return _context32.stop();\n      }\n    }\n  }, _marked32);\n}\n\nfunction watchPlayLoadPost() {\n  return _regeneratorRuntime.wrap(function watchPlayLoadPost$(_context33) {\n    while (1) {\n      switch (_context33.prev = _context33.next) {\n        case 0:\n          _context33.next = 2;\n          return takeLatest(LOAD_PLAY_POST_REQUEST, loadPlayPosts);\n\n        case 2:\n        case \"end\":\n          return _context33.stop();\n      }\n    }\n  }, _marked33);\n}\n\nfunction watchoSendLoadPost() {\n  return _regeneratorRuntime.wrap(function watchoSendLoadPost$(_context34) {\n    while (1) {\n      switch (_context34.prev = _context34.next) {\n        case 0:\n          _context34.next = 2;\n          return takeLatest(LOAD_O_SEND_POST_REQUEST, loadoSendPosts);\n\n        case 2:\n        case \"end\":\n          return _context34.stop();\n      }\n    }\n  }, _marked34);\n}\n\nfunction watchoRecieveLoadPost() {\n  return _regeneratorRuntime.wrap(function watchoRecieveLoadPost$(_context35) {\n    while (1) {\n      switch (_context35.prev = _context35.next) {\n        case 0:\n          _context35.next = 2;\n          return takeLatest(LOAD_O_RECIEVE_POST_REQUEST, loadoRecievePosts);\n\n        case 2:\n        case \"end\":\n          return _context35.stop();\n      }\n    }\n  }, _marked35);\n}\n\nfunction watchtSendLoadPost() {\n  return _regeneratorRuntime.wrap(function watchtSendLoadPost$(_context36) {\n    while (1) {\n      switch (_context36.prev = _context36.next) {\n        case 0:\n          _context36.next = 2;\n          return takeLatest(LOAD_T_SEND_POST_REQUEST, loadtSendPosts);\n\n        case 2:\n        case \"end\":\n          return _context36.stop();\n      }\n    }\n  }, _marked36);\n}\n\nfunction watchtRecieveLoadPost() {\n  return _regeneratorRuntime.wrap(function watchtRecieveLoadPost$(_context37) {\n    while (1) {\n      switch (_context37.prev = _context37.next) {\n        case 0:\n          _context37.next = 2;\n          return takeLatest(LOAD_T_RECIEVE_POST_REQUEST, loadtRecievePosts);\n\n        case 2:\n        case \"end\":\n          return _context37.stop();\n      }\n    }\n  }, _marked37);\n}\n\nfunction watchLoadLikedtagPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadLikedtagPosts$(_context38) {\n    while (1) {\n      switch (_context38.prev = _context38.next) {\n        case 0:\n          _context38.next = 2;\n          return takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\n\n        case 2:\n        case \"end\":\n          return _context38.stop();\n      }\n    }\n  }, _marked38);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context39) {\n    while (1) {\n      switch (_context39.prev = _context39.next) {\n        case 0:\n          _context39.next = 2;\n          return all([fork(watchAddPost), fork(watchLoadSPost), fork(watchLoadPost), fork(watchLoadRelatedPost), fork(watchLoadHashtagPosts), fork(watchLoadLikedtagPosts), fork(watchLoadUserPosts), fork(watchLikePost), fork(watchUnLikePost), fork(watchRemovePost), fork(watchModifyPost), fork(watchAddComment), fork(watchUploadImages), fork(watchPlayLoadPost), fork(watchCoopLoadPost), fork(watchoSendLoadPost), fork(watchoRecieveLoadPost), fork(watchtSendLoadPost), fork(watchtRecieveLoadPost)]);\n\n        case 2:\n        case \"end\":\n          return _context39.stop();\n      }\n    }\n  }, _marked39);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RelatedPostAPI\");\n$RefreshReg$(_c2, \"RelatedPost\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/sagas/post.js"],"names":["addPost","removePost","loadPost","loadSPost","likePost","unlikePost","addComment","uploadImages","loadUserPosts","RelatedPost","loadHashtagPosts","loadLikedPosts","modifyPost","loadCoopPosts","loadPlayPosts","loadoSendPosts","loadoRecievePosts","loadtSendPosts","loadtRecievePosts","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchUploadImages","watchLoadSPost","watchLoadUserPosts","watchLoadHashtagPosts","watchModifyPost","watchLoadRelatedPost","watchCoopLoadPost","watchPlayLoadPost","watchoSendLoadPost","watchoRecieveLoadPost","watchtSendLoadPost","watchtRecieveLoadPost","watchLoadLikedtagPosts","postSaga","all","call","fork","put","takeLatest","throttle","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_LIKED_POSTS_FAILURE","LOAD_LIKED_POSTS_REQUEST","LOAD_LIKED_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_RELATED_POST_FAILURE","LOAD_RELATED_POST_REQUEST","LOAD_RELATED_POST_SUCCESS","LOAD_COOP_POST_REQUEST","LOAD_COOP_POST_SUCCESS","LOAD_COOP_POST_FAILURE","LOAD_PLAY_POST_REQUEST","LOAD_PLAY_POST_SUCCESS","LOAD_PLAY_POST_FAILURE","LOAD_O_SEND_POST_REQUEST","LOAD_O_SEND_POST_SUCCESS","LOAD_O_SEND_POST_FAILURE","LOAD_O_RECIEVE_POST_REQUEST","LOAD_O_RECIEVE_POST_SUCCESS","LOAD_O_RECIEVE_POST_FAILURE","LOAD_T_SEND_POST_REQUEST","LOAD_T_SEND_POST_SUCCESS","LOAD_T_SEND_POST_FAILURE","LOAD_T_RECIEVE_POST_REQUEST","LOAD_T_RECIEVE_POST_SUCCESS","LOAD_T_RECIEVE_POST_FAILURE","LOAD_SPOST_FAILURE","LOAD_SPOST_REQUEST","LOAD_SPOST_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","MODIFY_POST_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","action","result","type","id","error","response","removePostAPI","loadPostAPI","lastId","get","loadSPostAPI","likePostAPI","patch","unlikePostAPI","addCommentAPI","postId","console","uploadImagesAPI","loadUserPostsAPI","RelatedPostAPI","loadHashtagPostsAPI","encodeURIComponent","loadLikedPostsAPI","modifyPostAPI","PostId","loadCoopPostsAPI","loadPlayPostsAPI","loadoSendPostsAPI","loadoRecievePostsAPI","loadtSendPostsAPI","loadtRecievePostsAPI"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_HASHTAG_POSTS_FAILURE,\r\n  LOAD_HASHTAG_POSTS_REQUEST,\r\n  LOAD_HASHTAG_POSTS_SUCCESS,\r\n  LOAD_LIKED_POSTS_FAILURE,\r\n  LOAD_LIKED_POSTS_REQUEST,\r\n  LOAD_LIKED_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_RELATED_POST_FAILURE,\r\n  LOAD_RELATED_POST_REQUEST,\r\n  LOAD_RELATED_POST_SUCCESS,\r\n  LOAD_COOP_POST_REQUEST,\r\n  LOAD_COOP_POST_SUCCESS,\r\n  LOAD_COOP_POST_FAILURE,\r\n  LOAD_PLAY_POST_REQUEST,\r\n  LOAD_PLAY_POST_SUCCESS,\r\n  LOAD_PLAY_POST_FAILURE,\r\n  LOAD_O_SEND_POST_REQUEST,\r\n  LOAD_O_SEND_POST_SUCCESS,\r\n  LOAD_O_SEND_POST_FAILURE,\r\n  LOAD_O_RECIEVE_POST_REQUEST,\r\n  LOAD_O_RECIEVE_POST_SUCCESS,\r\n  LOAD_O_RECIEVE_POST_FAILURE,\r\n  LOAD_T_SEND_POST_REQUEST,\r\n  LOAD_T_SEND_POST_SUCCESS,\r\n  LOAD_T_SEND_POST_FAILURE,\r\n  LOAD_T_RECIEVE_POST_REQUEST,\r\n  LOAD_T_RECIEVE_POST_SUCCESS,\r\n  LOAD_T_RECIEVE_POST_FAILURE,\r\n  LOAD_SPOST_FAILURE,\r\n  LOAD_SPOST_REQUEST,\r\n  LOAD_SPOST_SUCCESS,\r\n  LOAD_USER_POSTS_FAILURE,\r\n  LOAD_USER_POSTS_REQUEST,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  MODIFY_POST_FAILURE,\r\n  MODIFY_POST_REQUEST,\r\n  MODIFY_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data); // formdata 전송\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`); // delete는 데이터를 가져갈 수 없다 data는 postId\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadSPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadSPost(action) {\r\n  try {\r\n    const result = yield call(loadSPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_SPOST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_SPOST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n  try {\r\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction RelatedPostAPI(lastId) {\r\n  return axios.get(`/posts/related?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* RelatedPost(action) {\r\n  try {\r\n    const result = yield call(RelatedPostAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_RELATED_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_RELATED_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n  try {\r\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadLikedPostsAPI(data, lastId) {\r\n  return axios.get(`/liked?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadLikedPosts(action) {\r\n  try {\r\n    const result = yield call(loadLikedPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_LIKED_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_LIKED_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction modifyPostAPI(data) {\r\n  return axios.patch(`/post/${data.PostId}`, data);\r\n}\r\n\r\nfunction* modifyPost(action) {\r\n  try {\r\n    const result = yield call(modifyPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: MODIFY_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: MODIFY_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadCoopPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadCoopPosts(action) {\r\n  try {\r\n    const result = yield call(loadCoopPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPlayPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPlayPosts(action) {\r\n  try {\r\n    const result = yield call(loadPlayPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadoSendPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadoSendPosts(action) {\r\n  try {\r\n    const result = yield call(loadoSendPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadoRecievePostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadoRecievePosts(action) {\r\n  try {\r\n    const result = yield call(loadoRecievePostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadtSendPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadtSendPosts(action) {\r\n  try {\r\n    const result = yield call(loadtSendPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadtRecievePostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadtRecievePosts(action) {\r\n  try {\r\n    const result = yield call(loadtRecievePostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield throttle(2000, LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnLikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLoadSPost() {\r\n  yield takeLatest(LOAD_SPOST_REQUEST, loadSPost);\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction* watchModifyPost() {\r\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\r\n}\r\n\r\nfunction* watchLoadRelatedPost() {\r\n  yield takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\r\n}\r\n\r\nfunction* watchCoopLoadPost() {\r\n  yield takeLatest(LOAD_COOP_POST_REQUEST, loadCoopPosts);\r\n}\r\n\r\nfunction* watchPlayLoadPost() {\r\n  yield takeLatest(LOAD_PLAY_POST_REQUEST, loadPlayPosts);\r\n}\r\n\r\nfunction* watchoSendLoadPost() {\r\n  yield takeLatest(LOAD_O_SEND_POST_REQUEST, loadoSendPosts);\r\n}\r\n\r\nfunction* watchoRecieveLoadPost() {\r\n  yield takeLatest(LOAD_O_RECIEVE_POST_REQUEST, loadoRecievePosts);\r\n}\r\n\r\nfunction* watchtSendLoadPost() {\r\n  yield takeLatest(LOAD_T_SEND_POST_REQUEST, loadtSendPosts);\r\n}\r\n\r\nfunction* watchtRecieveLoadPost() {\r\n  yield takeLatest(LOAD_T_RECIEVE_POST_REQUEST, loadtRecievePosts);\r\n}\r\n\r\nfunction* watchLoadLikedtagPosts() {\r\n  yield takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadSPost),\r\n    fork(watchLoadPost),\r\n    fork(watchLoadRelatedPost),\r\n    fork(watchLoadHashtagPosts),\r\n    fork(watchLoadLikedtagPosts),\r\n    fork(watchLoadUserPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnLikePost),\r\n    fork(watchRemovePost),\r\n    fork(watchModifyPost),\r\n    fork(watchAddComment),\r\n    fork(watchUploadImages),\r\n    fork(watchPlayLoadPost),\r\n    fork(watchCoopLoadPost),\r\n    fork(watchoSendLoadPost),\r\n    fork(watchoRecieveLoadPost),\r\n    fork(watchtSendLoadPost),\r\n    fork(watchtRecieveLoadPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}