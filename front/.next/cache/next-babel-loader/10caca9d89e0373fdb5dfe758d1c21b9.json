{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Input } from 'antd';\nconst {\n  TextArea\n} = Input;\n\nfunction PostCardContent({\n  postData,\n  editMode\n}) {\n  const {\n    0: editText,\n    1: setEditText\n  } = useState(postData);\n  const onChangeText = useCallback(e => {\n    setEditText(e.target.value);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, editMode ? __jsx(TextArea, {\n    value: editText,\n    onchange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }) : postData.split(/(#[^\\s#]+)/g).map((v, i) => {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: `/hashtag/${v.slice(1)}`,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 66\n        }\n      }, v));\n    }\n\n    return v;\n  }));\n}\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/components/PostCardContent.js"],"names":["React","useCallback","useState","Link","PropTypes","Input","TextArea","PostCardContent","postData","editMode","editText","setEditText","onChangeText","e","target","value","split","map","v","i","match","slice","propTypes","string","isRequired","bool","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeD,KAArB;;AAEA,SAASE,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAiD;AAC/C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAACM,QAAD,CAAxC;AAEA,QAAMI,YAAY,GAAGX,WAAW,CAAEY,CAAD,IAAO;AACtCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QAAQ,GAEL,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,QAAjB;AAA2B,IAAA,QAAQ,EAAEE,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAILJ,QAAQ,CAACQ,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5C,QAAID,CAAC,CAACE,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACzB,aAAO,MAAC,IAAD;AAAM,QAAA,IAAI,EAAG,YAAWF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAW,EAAnC;AAAsC,QAAA,GAAG,EAAEF,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,CAAJ,CAA9C,CAAP;AACD;;AACD,WAAOA,CAAP;AACD,GALC,CALN,CADF;AAcD;;AAEDX,eAAe,CAACe,SAAhB,GAA4B;AAAEd,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,MAAV,CAAiBC,UAA7B;AAC1Bf,EAAAA,QAAQ,EAAEL,SAAS,CAACqB;AADM,CAA5B;AAGAlB,eAAe,CAACmB,YAAhB,GAA+B;AAC7BjB,EAAAA,QAAQ,EAAE;AADmB,CAA/B;AAIA,eAAeF,eAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction PostCardContent({ postData, editMode }) {\r\n  const [editText, setEditText] = useState(postData);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setEditText(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {editMode\r\n        ? (\r\n          <TextArea value={editText} onchange={onChangeText} />\r\n        )\r\n        : postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n          if (v.match(/(#[^\\s#]+)/)) {\r\n            return <Link href={`/hashtag/${v.slice(1)}`} key={i}><a>{v}</a></Link>;\r\n          }\r\n          return v;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nPostCardContent.propTypes = { postData: PropTypes.string.isRequired,\r\n  editMode: PropTypes.bool };\r\n\r\nPostCardContent.defaultProps = {\r\n  editMode: false,\r\n};\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}