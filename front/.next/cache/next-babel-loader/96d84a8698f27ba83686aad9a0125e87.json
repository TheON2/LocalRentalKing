{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-Thewitter\\\\prepare\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport { Col, Row } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport LoginForm from '../components/LoginForm';\nimport UserProfile from '../components/UserProfile';\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    reTweetError,\n    id\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (reTweetError) {\n      alert(reTweetError);\n    }\n  }, [reTweetError]); // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_MY_INFO_REQUEST,\n  //   });\n  // }, []);\n  //\n  // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_POST_REQUEST,\n  //   });\n  // }, []);\n\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (inView && hasMorePost && !loadPostLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POST_REQUEST,\n        lastId\n      });\n    }\n  }, [inView, hasMorePost, loadPostLoading, mainPosts, id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, me ? __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 34\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })) : __jsx(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"main.png\",\n    style: {\n      height: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(LoginForm, {\n    style: {\n      marginTop: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    xs: 24,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/TheON2\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Made by TheON2\"))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["C:/study/react-Thewitter/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","useInView","axios","END","Col","Row","AppLayout","PostForm","PostCard","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","LoginForm","UserProfile","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","reTweetError","id","post","alert","ref","inView","lastId","length","type","map","undefined","height","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport { Col, Row } from 'antd';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\nimport LoginForm from '../components/LoginForm';\r\nimport UserProfile from '../components/UserProfile';\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, reTweetError, id } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    if (reTweetError) {\r\n      alert(reTweetError);\r\n    }\r\n  }, [reTweetError]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_MY_INFO_REQUEST,\r\n  //   });\r\n  // }, []);\r\n  //\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_POST_REQUEST,\r\n  //   });\r\n  // }, []);\r\n\r\n  const [ref, inView] = useInView();\r\n\r\n  useEffect(\r\n    () => {\r\n      if (inView && hasMorePost && !loadPostLoading) {\r\n        const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n        dispatch({\r\n          type: LOAD_POST_REQUEST,\r\n          lastId,\r\n        });\r\n      }\r\n    },\r\n    [inView, hasMorePost, loadPostLoading, mainPosts, id],\r\n  );\r\n\r\n  return (\r\n\r\n    <div>{me ? (\r\n      <AppLayout>\r\n        {me && <PostForm />}\r\n        {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        <div ref={hasMorePost && !loadPostLoading ? ref : undefined} />\r\n      </AppLayout>\r\n\r\n    ) : (\r\n      <Row gutter={8}>\r\n        <Col xs={24} md={10}>\r\n          <img src=\"main.png\" style={{ height: 1000 }} />\r\n        </Col>\r\n        <Col xs={24} md={10}>\r\n          <LoginForm style={{ marginTop: 100 }} />\r\n        </Col>\r\n        <Col xs={24} md={4}>\r\n          <a\r\n            href=\"https://github.com/TheON2\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n          >\r\n            Made by TheON2\r\n          </a>\r\n        </Col>\r\n      </Row>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}