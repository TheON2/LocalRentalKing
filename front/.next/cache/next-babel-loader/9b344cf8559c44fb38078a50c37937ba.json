{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\components\\\\HotTags.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useInView } from \"react-intersection-observer\";\nimport { Tag } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_O_SEND_POST_REQUEST } from '../reducers/post';\n\nfunction HotTags() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useInView = useInView(),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      id = _useSelector2.id;\n\n  var CheckableTag = Tag.CheckableTag;\n  var tagsData = ['Movies', 'Books', 'Music', 'Sports'];\n\n  var _useState = useState(['Books']),\n      selectedTags = _useState[0],\n      setSelectedTags = _useState[1];\n\n  var handleChange = useCallback(function (tag, checked) {\n    var nextSelectedTags = checked ? [].concat(_toConsumableArray(selectedTags), [tag]) : selectedTags.filter(function (t) {\n      return t !== tag;\n    });\n    console.log('You are interested in: ', nextSelectedTags);\n    setSelectedTags(nextSelectedTags);\n  }, []);\n  useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\n  function () {\n    if (inView && hasMorePost && !loadPostLoading) {\n      var _mainPosts;\n\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n      dispatch({\n        type: LOAD_O_SEND_POST_REQUEST,\n        lastId: lastId // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\n\n      });\n    }\n  }, [inView, hasMorePost, loadPostLoading, mainPosts, id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Categories:\"), tagsData.map(function (tag) {\n    return __jsx(CheckableTag, {\n      key: tag,\n      checked: selectedTags.indexOf(tag) > -1,\n      onChange: function onChange(checked) {\n        return handleChange(tag, checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, tag);\n  }));\n}\n\n_s(HotTags, \"v7lMwkNlNY1faA5pswg2uJNQRVY=\", false, function () {\n  return [useDispatch, useInView, useSelector, useSelector];\n});\n\n_c = HotTags;\nexport default HotTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotTags\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/components/HotTags.js"],"names":["React","useCallback","useEffect","useState","axios","wrapper","Head","useDispatch","useSelector","END","useInView","Tag","AppLayout","LOAD_MY_INFO_REQUEST","LOAD_O_SEND_POST_REQUEST","HotTags","dispatch","ref","inView","state","user","me","post","mainPosts","hasMorePost","loadPostLoading","id","CheckableTag","tagsData","selectedTags","setSelectedTags","handleChange","tag","checked","nextSelectedTags","filter","t","console","log","lastId","length","type","marginRight","map","indexOf"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport Head from 'next/head';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Tag } from 'antd';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_O_SEND_POST_REQUEST } from '../reducers/post';\r\n\r\nfunction HotTags() {\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n\r\n  const { CheckableTag } = Tag;\r\n\r\n  const tagsData = ['Movies', 'Books', 'Music', 'Sports'];\r\n\r\n  const [selectedTags,setSelectedTags] =useState(['Books',]);\r\n\r\n  const handleChange = useCallback((tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    setSelectedTags(nextSelectedTags);\r\n    },[]);\r\n\r\n  useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\r\n    () => {\r\n      if (inView && hasMorePost && !loadPostLoading) {\r\n        const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n        dispatch({\r\n          type: LOAD_O_SEND_POST_REQUEST,\r\n          lastId, // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\r\n        });\r\n      }\r\n    },\r\n    [inView, hasMorePost, loadPostLoading, mainPosts, id],\r\n  );\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span style={{ marginRight: 8 }}>Categories:</span>\r\n      {tagsData.map(tag => (\r\n        <CheckableTag\r\n          key={tag}\r\n          checked={selectedTags.indexOf(tag) > -1}\r\n          onChange={checked => handleChange(tag, checked)}\r\n        >\r\n          {tag}\r\n        </CheckableTag>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HotTags;\r\n"]},"metadata":{},"sourceType":"module"}