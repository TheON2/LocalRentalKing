{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MODIFY_POST_REQUEST } from '../reducers/post';\nvar TextArea = Input.TextArea;\n\nfunction PostCardContent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var postData = _ref.postData,\n      editMode = _ref.editMode,\n      onCancelUpdate = _ref.onCancelUpdate;\n  var dispatch = useDispatch();\n\n  var _useState = useState(postData),\n      editText = _useState[0],\n      setEditText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      modifyPostLoading = _useSelector.modifyPostLoading;\n\n  var onChangeText = useCallback(function (e) {\n    setEditText(e.target.value);\n  }, []);\n  var onChangePost = useCallback(function () {\n    return dispatch({\n      type: MODIFY_POST_REQUEST,\n      data: post\n    });\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, editMode ? __jsx(React.Fragment, null, __jsx(TextArea, {\n    value: editText,\n    onchange: onChangeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    loading: modifyPostLoading,\n    onClick: onChangePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\uC218\\uC815\"), \"}\", __jsx(Button, {\n    type: \"danger\",\n    onClick: onCancelUpdatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"\\uCDE8\\uC18C\"))) : postData.split(/(#[^\\s#]+)/g).map(function (v, i) {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1)),\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 66\n        }\n      }, v));\n    }\n\n    return v;\n  }));\n}\n\n_s(PostCardContent, \"JlPjlMMY5urTjK1nysH+f7fK0yo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onCancelUpdate: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/components/PostCardContent.js"],"names":["React","useCallback","useState","Link","PropTypes","Button","Input","useDispatch","useSelector","MODIFY_POST_REQUEST","TextArea","PostCardContent","postData","editMode","onCancelUpdate","dispatch","editText","setEditText","state","post","modifyPostLoading","onChangeText","e","target","value","onChangePost","type","data","onCancelUpdatePost","split","map","v","i","match","slice","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MODIFY_POST_REQUEST } from '../reducers/post';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction PostCardContent({ postData, editMode, onCancelUpdate }) {\r\n  const dispatch = useDispatch();\r\n  const [editText, setEditText] = useState(postData);\r\n  const { modifyPostLoading } = useSelector((state) => state.post);\r\n\r\n  const onChangeText = useCallback((e) => {\r\n    setEditText(e.target.value);\r\n  }, []);\r\n\r\n  const onChangePost = useCallback(() => dispatch({\r\n    type: MODIFY_POST_REQUEST,\r\n    data: post,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      {editMode\r\n        ? (\r\n          <>\r\n            <TextArea value={editText} onchange={onChangeText} />\r\n            <Button.Group>\r\n              <Button loading={modifyPostLoading} onClick={onChangePost}>수정</Button>}\r\n              <Button type=\"danger\" onClick={onCancelUpdatePost}>취소</Button>\r\n            </Button.Group>\r\n          </>\r\n        )\r\n        : postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n          if (v.match(/(#[^\\s#]+)/)) {\r\n            return <Link href={`/hashtag/${v.slice(1)}`} key={i}><a>{v}</a></Link>;\r\n          }\r\n          return v;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nPostCardContent.propTypes = { postData: PropTypes.string.isRequired,\r\n  editMode: PropTypes.bool,\r\n  onCancelUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nPostCardContent.defaultProps = {\r\n  editMode: false,\r\n};\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}