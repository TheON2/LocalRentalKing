{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\components\\\\HotTags.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useInView } from \"react-intersection-observer\";\nimport { Tag } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_O_SEND_POST_REQUEST } from '../reducers/post';\n\nfunction HotTags() {\n  const dispatch = useDispatch();\n  const [ref, inView] = useInView();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    id\n  } = useSelector(state => state.post);\n  const {\n    CheckableTag\n  } = Tag;\n  const tagsData = ['Movies', 'Books', 'Music', 'Sports'];\n  const {\n    0: selectedTags,\n    1: setSelectedTags\n  } = useState(['Books']);\n  const handleChange = useCallback((tag, checked) => {\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\n    console.log('You are interested in: ', nextSelectedTags);\n    setSelectedTags(nextSelectedTags);\n  }, []);\n  useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\n  () => {\n    if (inView && hasMorePost && !loadPostLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n      dispatch({\n        type: LOAD_O_SEND_POST_REQUEST,\n        lastId // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\n\n      });\n    }\n  }, [inView, hasMorePost, loadPostLoading, mainPosts, id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Categories:\"), tagsData.map(tag => __jsx(CheckableTag, {\n    key: tag,\n    checked: selectedTags.indexOf(tag) > -1,\n    onChange: checked => handleChange(tag, checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, tag)));\n}\n\nexport default HotTags;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/components/HotTags.js"],"names":["React","useCallback","useEffect","useState","axios","wrapper","Head","useDispatch","useSelector","END","useInView","Tag","AppLayout","LOAD_MY_INFO_REQUEST","LOAD_O_SEND_POST_REQUEST","HotTags","dispatch","ref","inView","me","state","user","mainPosts","hasMorePost","loadPostLoading","id","post","CheckableTag","tagsData","selectedTags","setSelectedTags","handleChange","tag","checked","nextSelectedTags","filter","t","console","log","lastId","length","type","marginRight","map","indexOf"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport Head from 'next/head';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Tag } from 'antd';\r\n\r\nimport AppLayout from '../components/AppLayout';\r\n\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_O_SEND_POST_REQUEST } from '../reducers/post';\r\n\r\nfunction HotTags() {\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n\r\n  const { CheckableTag } = Tag;\r\n\r\n  const tagsData = ['Movies', 'Books', 'Music', 'Sports'];\r\n\r\n  const [selectedTags,setSelectedTags] =useState(['Books',]);\r\n\r\n  const handleChange = useCallback((tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    setSelectedTags(nextSelectedTags);\r\n    },[]);\r\n\r\n  useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\r\n    () => {\r\n      if (inView && hasMorePost && !loadPostLoading) {\r\n        const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n        dispatch({\r\n          type: LOAD_O_SEND_POST_REQUEST,\r\n          lastId, // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\r\n        });\r\n      }\r\n    },\r\n    [inView, hasMorePost, loadPostLoading, mainPosts, id],\r\n  );\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span style={{ marginRight: 8 }}>Categories:</span>\r\n      {tagsData.map(tag => (\r\n        <CheckableTag\r\n          key={tag}\r\n          checked={selectedTags.indexOf(tag) > -1}\r\n          onChange={checked => handleChange(tag, checked)}\r\n        >\r\n          {tag}\r\n        </CheckableTag>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HotTags;\r\n"]},"metadata":{},"sourceType":"module"}