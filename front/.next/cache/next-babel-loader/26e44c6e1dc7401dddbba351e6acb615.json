{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\teamproject\\\\project\\\\LocalRentalKing\\\\front\\\\pages\\\\profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { END } from 'redux-saga';\nimport { Avatar, Card } from 'antd';\nimport Link from 'next/link';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction Profile() {\n  const {\n    me,\n    usersInfo\n  } = useSelector(state => state.user);\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px'\n  };\n  useEffect(() => {\n    if (!(me && me.id)) {\n      alert('로그인 후 이용 가능 합니다.');\n      Router.replace('/loginpage'); // push와 다르게 replace는 이전 기록 자체를 지워버리기에 이자리에 더 적합하다.\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, me.nickname[0]),\n    title: me.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), __jsx(PostCard2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  }); // context.store.dispatch({\n  //   type: LOAD_USERS_REQUEST,\n  // });\n  // context.store.dispatch({\n  //   type: LOAD_POST_REQUEST,\n  // });\n\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Bootcamp/teamproject/project/LocalRentalKing/front/pages/profile.js"],"names":["React","useEffect","Head","useSelector","Router","END","Avatar","Card","Link","AppLayout","LOAD_MY_INFO_REQUEST","LOAD_USERS_REQUEST","wrapper","axios","Layout","PostCard2","Profile","me","usersInfo","state","user","style","borderRadius","marginBottom","id","alert","replace","nickname","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport Head from 'next/head';\nimport {useSelector} from 'react-redux';\nimport Router from 'next/router';\nimport {END} from 'redux-saga';\nimport {Avatar, Card} from 'antd';\nimport Link from 'next/link';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport {LOAD_MY_INFO_REQUEST, LOAD_USERS_REQUEST} from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport axios from \"axios\";\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction Profile() {\n  const { me , usersInfo } = useSelector((state) => state.user);\n\n  const style = {\n    borderRadius: '2rem',\n    marginBottom: '20px',\n  };\n\n  useEffect(() => {\n    if (!(me && me.id)) {\n      alert('로그인 후 이용 가능 합니다.');\n      Router.replace('/loginpage'); // push와 다르게 replace는 이전 기록 자체를 지워버리기에 이자리에 더 적합하다.\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return (\n    <>\n      <Head>\n        <title>내 프로필 | 우리동네 렌탈대장</title>\n      </Head>\n      <Layout>\n\n        <Card>\n          <Card.Meta\n            avatar={<Avatar>{me.nickname[0]}</Avatar>}\n            title={me.nickname}\n          />\n        </Card>\n\n        <PostCard2/>\n\n        {/*{usersInfo.map((c) => (*/}\n        {/*  <Link href={`/user/${c.id}`} prefetch={false}>*/}\n        {/*    <Card style={style}>*/}\n        {/*      <Card.Meta*/}\n        {/*        avatar={(*/}\n        {/*          <a><Avatar>{c.nickname[0]}</Avatar></a>*/}\n        {/*        )}*/}\n        {/*        title={c.nickname}*/}\n        {/*      />*/}\n        {/*      <br />*/}\n        {/*    </Card>*/}\n        {/*  </Link>*/}\n        {/*))}*/}\n\n      </Layout>\n    </>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  // context.store.dispatch({\n  //   type: LOAD_USERS_REQUEST,\n  // });\n  // context.store.dispatch({\n  //   type: LOAD_POST_REQUEST,\n  // });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}