{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react-nodebird\\\\prepare\\\\front\\\\pages\\\\liked\\\\[tag].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { LOAD_LIKED_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\n\nfunction Hashtag() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag; // [tag].js 파일 명의 [] 부분이 들어간다\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostLoading = _useSelector.loadPostLoading,\n      loadPostDone = _useSelector.loadPostDone;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      me = _useSelector2.me;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_LIKED_POSTS_REQUEST,\n      lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id\n    });\n  }, [loadPostDone]);\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          dispatch({\n            type: LOAD_LIKED_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePost, tag, loadPostLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    });\n  }));\n}\n\n_s(Hashtag, \"7ew6BVRrxoFaDxJQFX/cmbOdUXk=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/study/react-nodebird/prepare/front/pages/liked/[tag].js"],"names":["React","useEffect","useDispatch","useSelector","useRouter","LOAD_LIKED_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","PostCard","AppLayout","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePost","loadPostLoading","loadPostDone","user","userInfo","me","type","lastId","length","id","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","c"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,wBAAT,EAAmCC,uBAAnC,QAAkE,qBAAlE;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAAA;;AACjB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAQQ,GAAR,GAAgBD,MAAM,CAACE,KAAvB,CAAQD,GAAR,CAHiB,CAGa;;AAC9B,qBAAkET,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA7E;AAAA,MAAQC,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,WAAnB,gBAAmBA,WAAnB;AAAA,MAAgCC,eAAhC,gBAAgCA,eAAhC;AAAA,MAAiDC,YAAjD,gBAAiDA,YAAjD;;AACA,sBAAyBhB,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACM,IAAjB;AAAA,GAAD,CAApC;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,EAAlB,iBAAkBA,EAAlB;;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAElB,wBADC;AAEPmB,MAAAA,MAAM,EAAER,SAAS,CAACA,SAAS,CAACS,MAAV,GAAmB,CAApB,CAAT,IAAmCT,SAAS,CAACA,SAAS,CAACS,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAFpE,KAAD,CAAR;AAID,GALQ,EAKN,CAACP,YAAD,CALM,CAAT;AAOAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM0B,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GAA6DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAAzG,EAA8G;AAC5G,YAAIhB,WAAW,IAAI,CAACC,eAApB,EAAqC;AACnCR,UAAAA,QAAQ,CAAC;AACPa,YAAAA,IAAI,EAAElB,wBADC;AAEPmB,YAAAA,MAAM,EAAER,SAAS,CAACA,SAAS,CAACS,MAAV,GAAmB,CAApB,CAAT,IAAmCT,SAAS,CAACA,SAAS,CAACS,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAFpE,WAAD,CAAR;AAID;AACF;AACF,KATD;;AAUAE,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACD,KAFD;AAGD,GAfQ,EAeN,CAACX,SAAS,CAACS,MAAX,EAAmBR,WAAnB,EAAgCL,GAAhC,EAAqCM,eAArC,CAfM,CAAT;AAiBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACoB,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACX,EAAjB;AAAqB,MAAA,IAAI,EAAEW,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CADF;AAOD;;GAtCQ5B,O;UACUP,W,EACFE,S,EAEmDD,W,EACzCA,W;;;KALlBM,O;;AAwDT,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_LIKED_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nfunction Hashtag() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { tag } = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\r\n  const { mainPosts, hasMorePost, loadPostLoading, loadPostDone } = useSelector((state) => state.post);\r\n  const { userInfo, me } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_LIKED_POSTS_REQUEST,\r\n      lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n    });\r\n  }, [loadPostDone]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          dispatch({\r\n            type: LOAD_LIKED_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePost, tag, loadPostLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((c) => (\r\n        <PostCard key={c.id} post={c} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_LIKED_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}